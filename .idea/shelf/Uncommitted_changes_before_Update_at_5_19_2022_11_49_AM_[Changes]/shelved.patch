Index: src/UserScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.awt.image.BufferedImage;\r\n\r\npublic class UserScreen extends JPanel implements ActionListener, KeyListener {\r\n\r\n    //instance variables\r\n    public static BufferedImage image;\r\n    public static boolean needImage = true;\r\n    public static boolean gotImage = false;\r\n\r\n    Player player;\r\n    GameManager manager;\r\n    Timer drawFrame;\r\n\r\n    //constructor\r\n    public UserScreen() {\r\n        player = new Player(500, 900, 50, 50);\r\n        manager = new GameManager(player);\r\n\r\n        drawFrame = new Timer(1000/60, this);\r\n        drawFrame.start();\r\n\r\n        if (needImage) {\r\n            loadImage (\"space.jpg\");\r\n        }\r\n    }\r\n\r\n    //paint the screen with active objects\r\n    @Override\r\n    public void paintComponent(Graphics g) {\r\n        drawLevelScreen(g);\r\n    }\r\n\r\n    //draw current user screen\r\n    public void drawLevelScreen(Graphics g) {\r\n        g.drawImage(image, 0, 0, null);\r\n        manager.draw(g);\r\n    }\r\n\r\n    //update current user screen\r\n    public void updateLevelScreen() {\r\n        player.updatePlayer();\r\n    }\r\n\r\n    //key and action listener methods\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        updateLevelScreen();\r\n        repaint();\r\n    }\r\n\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n        if (e.getKeyCode() == KeyEvent.VK_LEFT) {\r\n            player.moveLeft();\r\n        } else if (e.getKeyCode() == KeyEvent.VK_RIGHT) {\r\n            player.moveRight();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n        player.setSpeedX(0);\r\n    }\r\n\r\n    void loadImage(String imageFile) {\r\n        if (needImage) {\r\n            try {\r\n                image = ImageIO.read(this.getClass().getResourceAsStream(imageFile));\r\n                gotImage = true;\r\n            } catch (Exception e) {\r\n\r\n            }\r\n            needImage = false;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/UserScreen.java b/src/UserScreen.java
--- a/src/UserScreen.java	(revision 9d8fabb769062ad6ca9a623f076b4330a21c6546)
+++ b/src/UserScreen.java	(date 1652906180292)
@@ -15,6 +15,7 @@
     GameManager manager;
     Timer drawFrame;
 
+
     //constructor
     public UserScreen() {
         player = new Player(500, 900, 50, 50);
@@ -23,9 +24,11 @@
         drawFrame = new Timer(1000/60, this);
         drawFrame.start();
 
+
         if (needImage) {
             loadImage ("space.jpg");
         }
+
     }
 
     //paint the screen with active objects
