Index: src/UserScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.*;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\nimport java.util.Scanner;\r\n\r\npublic class UserScreen extends JPanel implements ActionListener, KeyListener {\r\n\r\n    //image loading variables\r\n    public static BufferedImage image;\r\n    public static boolean needImage = true;\r\n    public static boolean gotImage = false;\r\n\r\n    //instance variables\r\n    private Player player;\r\n    private GameManager manager;\r\n    private Timer drawFrame;\r\n    private Timer enemySpawner;\r\n\r\n    //constructor\r\n    public UserScreen() {\r\n        player = new Player(500, 860, 90, 90);\r\n        manager = new GameManager(player);\r\n\r\n        //timer that runs the \"frame rate\"\r\n        drawFrame = new Timer(1000 / 90, this);\r\n        drawFrame.start();\r\n\r\n        //timer that spawns enemies at a \"spawn rate\"\r\n        enemySpawner = new Timer(2000, manager);\r\n        enemySpawner.start();\r\n\r\n        if (needImage) {\r\n            loadImage(\"space.jpg\");\r\n        }\r\n    }\r\n\r\n    //paint the screen (JPanel) with initial active objects\r\n    @Override\r\n    public void paintComponent(Graphics g) {\r\n        drawLevelScreen(g);\r\n    }\r\n\r\n    //draws the initial level screen\r\n    public void drawLevelScreen(Graphics g) {\r\n        g.drawImage(image, 0, 0, null);\r\n        manager.drawObjects(g);\r\n\r\n        //text field for points value in the top-left of the user screen\r\n        Graphics2D g2 = (Graphics2D) g; //temporary 2d Graphics so the font can be manipulated\r\n        Font currentFont = g2.getFont(); //getting the current font snd setting it to a temporary Font variable\r\n        Font newFont = currentFont.deriveFont(currentFont.getSize() * 1.8F); //making a new font bigger\r\n        g2.setFont(newFont); //setting font to new bigger font\r\n        g2.setColor(Color.GREEN); //changing color so it stands out\r\n        g2.drawString(\"Score: \" + manager.getPoints(), 50, 50); //drawing the string onto the screen\r\n        /*\r\n        Graphics2D g3 = (Graphics2D) g;\r\n        Font currentFont2 = g3.getFont(); //getting the current font snd setting it to a temporary Font variable\r\n        Font newFont2 = currentFont2.deriveFont(currentFont2.getSize() * 1.8F); //making a new font bigger\r\n        g3.setFont(newFont2); //setting font to new bigger font\r\n        g3.setColor(Color.WHITE); //changing color so it stands out\r\n        String[] parts;\r\n        if(manager.checkForEnemy()) {\r\n            try (BufferedReader br = new BufferedReader(new FileReader(\"C:\\\\Users\\\\tobyp_8bbjnrg\\\\OneDrive\\\\Desktop\\\\strings.txt\"))) {\r\n                StringBuilder sb = new StringBuilder();\r\n                String line = br.readLine();\r\n\r\n                while (line != null) {\r\n                    sb.append(line);\r\n                    sb.append(System.lineSeparator());\r\n                    line = br.readLine();\r\n\r\n                }\r\n                String everything = sb.toString();\r\n                parts = everything.split(\" \");\r\n\r\n\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            if(wordUsed())\r\n            {\r\n                g3.drawString(parts[((int) (Math.random() * parts.length))], 415, 50);\r\n            }\r\n        }\r\n\r\n        */\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    //updates current level screen at a certain rate\r\n    public void updateLevelScreen() {\r\n        player.updatePlayer();\r\n        manager.updateObjects();\r\n    }\r\n\r\n    //key and action listener methods\r\n    //action performed method runs at a certain frame rate\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        //update all objects then repaint the screen\r\n        updateLevelScreen();\r\n        repaint();\r\n    }\r\n\r\n    //reads when a key is typed by the user\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n    }\r\n\r\n    //reads when the user presses a key and translates into code\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n        if (e.getKeyCode() == KeyEvent.VK_LEFT) {\r\n            player.moveLeft();\r\n        } else if (e.getKeyCode() == KeyEvent.VK_RIGHT) {\r\n            player.moveRight();\r\n        }\r\n\r\n        if (e.getKeyCode() == KeyEvent.VK_ENTER) {\r\n            manager.shootLaser();\r\n        }\r\n    }\r\n\r\n    //stops movement upon release of a key\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n        player.setSpeedX(0);\r\n    }\r\n\r\n    //image loading method\r\n    void loadImage(String imageFile) {\r\n        if (needImage) {\r\n            try {\r\n                image = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));\r\n                gotImage = true;\r\n            } catch (Exception e) {\r\n                System.out.println(\"Error at: \" + e.getMessage());\r\n            }\r\n            needImage = false;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/UserScreen.java b/src/UserScreen.java
--- a/src/UserScreen.java	(revision 057dd6255554b38bbcdaec980b490ae429924c84)
+++ b/src/UserScreen.java	(date 1653023930062)
@@ -57,7 +57,7 @@
         g2.setFont(newFont); //setting font to new bigger font
         g2.setColor(Color.GREEN); //changing color so it stands out
         g2.drawString("Score: " + manager.getPoints(), 50, 50); //drawing the string onto the screen
-        /*
+
         Graphics2D g3 = (Graphics2D) g;
         Font currentFont2 = g3.getFont(); //getting the current font snd setting it to a temporary Font variable
         Font newFont2 = currentFont2.deriveFont(currentFont2.getSize() * 1.8F); //making a new font bigger
@@ -88,11 +88,13 @@
             }
         }
 
-        */
+
 
     }
 
-
+    private boolean wordUsed() {
+        return true;
+    }
 
 
     //updates current level screen at a certain rate
Index: src/GameManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.util.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\npublic class GameManager implements ActionListener {\r\n\r\n    //instance variables\r\n    private Player player;\r\n    private ArrayList<Enemy> enemies;\r\n    private ArrayList<Laser> lasers;\r\n    //points variable\r\n    private int points = 0;\r\n\r\n    //constructor\r\n    public GameManager(Player player) {\r\n        this.player = player;\r\n        enemies = new ArrayList<Enemy>();\r\n        lasers = new ArrayList<Laser>();\r\n    }\r\n\r\n    //adds an enemy to the array list, priming it to be spawned\r\n    public void spawnEnemy() {\r\n        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //adds a new laser to the array list\r\n    public void shootLaser() {\r\n        lasers.add(new Laser(player.getX() + 40, 860, 8, 40));\r\n    }\r\n\r\n    //draw game objects onto the screen\r\n    public void drawObjects(Graphics g) {\r\n        player.draw(g);\r\n        for (Enemy enemy : enemies) {\r\n            enemy.draw(g);\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.draw(g);\r\n        }\r\n    }\r\n\r\n    //update all objects each frame\r\n    public void updateObjects() {\r\n        for (Enemy enemy : enemies) {\r\n            enemy.updateEnemy();\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.updateLaser();\r\n        }\r\n\r\n        checkCollisions();\r\n        //checkForEnemy();\r\n        deleteInactive();\r\n    }\r\n\r\n    //checks which objects have been collided with\r\n    public void checkCollisions() {\r\n        for (Enemy enemy : enemies) {\r\n            for (Laser laser : lasers) {\r\n                if (enemy.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    enemy.setActive(false);\r\n                    laser.setActive(false);\r\n                    points = points + 100;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n    public boolean checkForEnemy()\r\n    {\r\n        for(Enemy enemy : enemies){\r\n            if(enemy.isActive())\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    public boolean wordNeeded(){\r\n        for(Enemy enemy : enemies){\r\n            if(enemy.isActive())\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n     */\r\n\r\n\r\n\r\n    //deletes inactive objects every frame\r\n    public void deleteInactive() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            if (!(enemies.get(i).isActive())) {\r\n                enemies.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            if (!(lasers.get(i).isActive())) {\r\n                lasers.remove(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    //spawn enemies at a certain rate (rate decided in UserScreen)\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        spawnEnemy();\r\n    }\r\n\r\n    //getter for points\r\n    public String getPoints() {\r\n        String output = new String();\r\n        output = \"\" + points;\r\n        return output;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GameManager.java b/src/GameManager.java
--- a/src/GameManager.java	(revision 057dd6255554b38bbcdaec980b490ae429924c84)
+++ b/src/GameManager.java	(date 1653023930134)
@@ -53,7 +53,7 @@
         }
 
         checkCollisions();
-        //checkForEnemy();
+        checkForEnemy();
         deleteInactive();
     }
 
@@ -70,7 +70,7 @@
         }
     }
 
-    /*
+
     public boolean checkForEnemy()
     {
         for(Enemy enemy : enemies){
@@ -91,7 +91,7 @@
         return false;
     }
 
-     */
+
 
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ad717c3b-c1b7-40ae-b0e7-6b4ea63b2c7f\" name=\"Changes\" comment=\"Added Image\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/strings.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_47_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_47_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_54_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_54_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_46_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_46_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_43_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_43_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_49_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_49_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_53_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_53_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_28_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_28_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_34_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_34_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/GameManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GameManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/UserScreen.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/UserScreen.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"29IwL4yc2Jdr0cwPglVEZQGLwwt\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/tobyp_8bbjnrg/IdeaProjects/WordInvaders/src\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\tobyp_8bbjnrg\\IdeaProjects\\WordInvaders\\src\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\tobyp_8bbjnrg\\IdeaProjects\\WordInvaders\\src\" />\r\n      <recent name=\"H:\\Projects\\WordInvaders\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"WordInvadersDriver\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"WordInvadersDriver\" />\r\n      <module name=\"WordInvaders\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.WordInvadersDriver\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"aad3313d-e0d0-4d09-8bad-cbc18e0a7e02\" name=\"Changes\" comment=\"added background fixed movement\" />\r\n      <created>1652813851118</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1652813851118</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"int added\">\r\n      <created>1652814922890</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652814922890</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added background fixed movement\">\r\n      <created>1652905995778</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652905995778</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"enemy spawner\">\r\n      <created>1652988307800</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652988307800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"enemy png\">\r\n      <created>1652988813453</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652988813453</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"lasers working\">\r\n      <created>1652990182909</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652990182909</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"int added\" />\r\n    <MESSAGE value=\"Added Classes\" />\r\n    <MESSAGE value=\"added background fixed movement\" />\r\n    <MESSAGE value=\"enemy spawner\" />\r\n    <MESSAGE value=\"enemy png\" />\r\n    <MESSAGE value=\"lasers working\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"lasers working\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 057dd6255554b38bbcdaec980b490ae429924c84)
+++ b/.idea/workspace.xml	(date 1653024342712)
@@ -4,19 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ad717c3b-c1b7-40ae-b0e7-6b4ea63b2c7f" name="Changes" comment="Added Image">
-      <change afterPath="$PROJECT_DIR$/src/strings.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_47_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_47_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_54_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_54_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_46_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_46_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_43_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_43_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_49_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_49_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_53_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_53_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_28_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_28_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_34_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_34_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_1.xml" afterDir="false" />
+    <list default="true" id="ad717c3b-c1b7-40ae-b0e7-6b4ea63b2c7f" name="Changes" comment="Added Score Code&#10;Comments in place for when we figure out how to do check if a user has inputted a String from strings.txt">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/GameManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GameManager.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/UserScreen.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/UserScreen.java" afterDir="false" />
@@ -45,17 +33,17 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "last_opened_file_path": "C:/Users/tobyp_8bbjnrg/IdeaProjects/WordInvaders/src",
-    "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "preferences.pluginManager"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/tobyp_8bbjnrg/IdeaProjects/WordInvaders/src&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\tobyp_8bbjnrg\IdeaProjects\WordInvaders\src" />
@@ -82,7 +70,7 @@
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="aad3313d-e0d0-4d09-8bad-cbc18e0a7e02" name="Changes" comment="added background fixed movement" />
+      <changelist id="ad717c3b-c1b7-40ae-b0e7-6b4ea63b2c7f" name="Changes" comment="Added Score Code&#10;Comments in place for when we figure out how to do check if a user has inputted a String from strings.txt" />
       <created>1652813851118</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
@@ -123,7 +111,14 @@
       <option name="project" value="LOCAL" />
       <updated>1652990182909</updated>
     </task>
-    <option name="localTasksCounter" value="6" />
+    <task id="LOCAL-00006" summary="Added Score Code&#10;Comments in place for when we figure out how to do check if a user has inputted a String from strings.txt">
+      <created>1653004220066</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1653004220066</updated>
+    </task>
+    <option name="localTasksCounter" value="7" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -144,7 +139,8 @@
     <MESSAGE value="enemy spawner" />
     <MESSAGE value="enemy png" />
     <MESSAGE value="lasers working" />
-    <option name="LAST_COMMIT_MESSAGE" value="lasers working" />
+    <MESSAGE value="Added Score Code&#10;Comments in place for when we figure out how to do check if a user has inputted a String from strings.txt" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added Score Code&#10;Comments in place for when we figure out how to do check if a user has inputted a String from strings.txt" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
