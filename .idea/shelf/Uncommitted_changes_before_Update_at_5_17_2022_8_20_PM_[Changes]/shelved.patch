Index: src/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Player\r\n{\r\n    int position;\r\n    String typed;\r\n    int lives;\r\n    boolean alive;\r\n    public Player(int lives) {\r\n\r\n    }\r\n    //public void updatePosition(keyInput) {\r\n\r\n    //}\r\n    public void updateLives() {\r\n\r\n    }\r\n    public int getLives() {\r\n\r\n        return 0;\r\n    }\r\n    public void isDead() {\r\n\r\n    }\r\n    //public String typedWord(keyInputs) {\r\n\r\n    //}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Player.java b/src/Player.java
--- a/src/Player.java	(revision 42a6f280b01befabbaff0b375d0d533ae14961f8)
+++ b/src/Player.java	(date 1652842788105)
@@ -1,26 +1,50 @@
+import java.awt.event.KeyEvent;
+import java.awt.Graphics;
+import java.awt.image.BufferedImage;
+import java.awt.image.ImageObserver;
+import java.awt.Point;
+import java.io.File;
+import java.io.IOException;
+import javax.imageio.ImageIO;
 public class Player
 {
-    int position;
-    String typed;
-    int lives;
-    boolean alive;
-    public Player(int lives) {
-
+    private BufferedImage image;
+    private Point pos;
+    private int score;
+    public Player()
+    {
+        loadImage();
+        pos = new Point(0, 0);
+        score = 0;
+    }
+    private void loadImage()
+    {
+        try
+        {
+            image = ImageIO.read(new File("C:\\Users\\tobyp_8bbjnrg\\OneDrive\\Pictures"));
+        }
+        catch(IOException exc)
+        {
+            System.out.println("Error: " + exc.getMessage());
+        }
+    }
+    public void draw(Graphics g, ImageObserver observer)
+    {
+        g.drawImage(image, pos.x * 10, pos.y * 10, observer);
     }
-    //public void updatePosition(keyInput) {
-
-    //}
-    public void updateLives() {
-
-    }
-    public int getLives() {
-
-        return 0;
-    }
-    public void isDead() {
-
+    public void keyPressed(KeyEvent e) {
+        int key = e.getKeyCode();
+        if (key == KeyEvent.VK_UP) {
+            pos.translate(0, -1);
+        }
+        if (key == KeyEvent.VK_RIGHT) {
+            pos.translate(1, 0);
+        }
+        if (key == KeyEvent.VK_DOWN) {
+            pos.translate(0, 1);
+        }
+        if (key == KeyEvent.VK_LEFT) {
+            pos.translate(-1, 0);
+        }
     }
-    //public String typedWord(keyInputs) {
-
-    //}
 }
Index: src/Level.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport javax.swing.*;\r\n\r\npublic class Level extends JPanel implements ActionListener, KeyListener {\r\n\r\n    int levelNum;\r\n    long time;\r\n    int points;\r\n    boolean cleared;\r\n    Player player;\r\n    ArrayList<Enemy> enemies;\r\n    ArrayList<PowerUp> powerUps;\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n\r\n    }\r\n    public int getTime()\r\n    {\r\n        long startTime = System.currentTimeMillis();\r\n        long elapsedTime = System.currentTimeMillis() - startTime;\r\n        long elapsedSeconds = elapsedTime / 1000;\r\n        return (int) elapsedSeconds % 60;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Level.java b/src/Level.java
--- a/src/Level.java	(revision 42a6f280b01befabbaff0b375d0d533ae14961f8)
+++ b/src/Level.java	(date 1652842174769)
@@ -1,6 +1,7 @@
-import java.util.*;
 import java.awt.*;
 import java.awt.event.*;
+import java.util.ArrayList;
+import java.util.Random;
 import javax.swing.*;
 
 public class Level extends JPanel implements ActionListener, KeyListener {
@@ -9,9 +10,9 @@
     long time;
     int points;
     boolean cleared;
-    Player player;
-    ArrayList<Enemy> enemies;
-    ArrayList<PowerUp> powerUps;
+    private Player player;
+    private ArrayList<Enemy> enemies;
+    private ArrayList<PowerUp> powerUps;
 
     @Override
     public void actionPerformed(ActionEvent e) {
@@ -25,7 +26,7 @@
 
     @Override
     public void keyPressed(KeyEvent e) {
-
+        player.keyPressed(e);
     }
 
     @Override
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"aad3313d-e0d0-4d09-8bad-cbc18e0a7e02\" name=\"Changes\" comment=\"in progress game object\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/WordInvadersDriver.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/JFrame.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/UserScreen.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/UserScreen.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"29JkZBkjrphn5kGZDanawPcBhaS\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"WordInvadersDriver\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"WordInvadersDriver\" />\r\n      <module name=\"WordInvaders\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.WordInvadersDriver\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"aad3313d-e0d0-4d09-8bad-cbc18e0a7e02\" name=\"Changes\" comment=\"\" />\r\n      <created>1652838631924</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1652838631924</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"in progress game object\">\r\n      <created>1652840529793</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652840529793</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"in progress game object\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"in progress game object\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 42a6f280b01befabbaff0b375d0d533ae14961f8)
+++ b/.idea/workspace.xml	(date 1652843285632)
@@ -1,11 +1,15 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
     <list default="true" id="aad3313d-e0d0-4d09-8bad-cbc18e0a7e02" name="Changes" comment="in progress game object">
-      <change afterPath="$PROJECT_DIR$/src/WordInvadersDriver.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_26_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_26_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_53_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_12_53_PM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/JFrame.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/UserScreen.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/UserScreen.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Level.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Level.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Player.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -30,12 +34,13 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "settings.editor.selected.configurable": "MTConfigurable"
   }
-}</component>
+}]]></component>
   <component name="RunManager">
     <configuration name="WordInvadersDriver" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="WordInvadersDriver" />
