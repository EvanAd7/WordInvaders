Index: src/Level3Manager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\n\r\npublic class Level3Manager implements ActionListener {\r\n\r\n    //instance variables\r\n    private Player player;\r\n    private ArrayList<Enemy> enemies;\r\n    private ArrayList<Laser> lasers;\r\n    private ArrayList<PowerUp> powerUps;\r\n    private boolean invincible;\r\n    private int points = 0;\r\n    private int counter = 0;\r\n    private int powerUpReset = 0;\r\n\r\n    //constructor\r\n    public Level3Manager(Player player) {\r\n        this.player = player;\r\n        enemies = new ArrayList<Enemy>();\r\n        lasers = new ArrayList<Laser>();\r\n        powerUps = new ArrayList<PowerUp>();\r\n        invincible = false;\r\n    }\r\n\r\n    //adds an enemy to the array list, priming it to be spawned\r\n    public void spawnEnemy() {\r\n        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //adds a new laser to the array list\r\n    public void shootLaser() {\r\n        lasers.add(new Laser(player.getX() + 40, 860, 8, 40));\r\n    }\r\n\r\n    //adds a power-up to the array list, priming it to be spawned in\r\n    public void spawnPowerUp() {\r\n        powerUps.add(new PowerUp((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //draw game objects onto the screen\r\n    public void drawObjects(Graphics g) {\r\n        player.draw(g);\r\n        for (Enemy enemy : enemies) {\r\n            enemy.draw(g);\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.draw(g);\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.draw(g);\r\n        }\r\n    }\r\n\r\n    //update all objects each frame\r\n    public void updateObjects() {\r\n        for (Enemy enemy : enemies) {\r\n            enemy.updateEnemy();\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.updateLaser();\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.updatePowerUp();\r\n        }\r\n\r\n        checkCollisions();\r\n        lifeLoss();\r\n        deleteInactive();\r\n    }\r\n\r\n    //checks which objects have been collided with\r\n    public void checkCollisions() {\r\n        for (Enemy enemy : enemies) {\r\n            for (Laser laser : lasers) {\r\n                if (enemy.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    enemy.setActive(false);\r\n                    laser.setActive(false);\r\n                    points += 300;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (PowerUp powerup : powerUps) {\r\n            for (Laser laser : lasers) {\r\n                if (powerup.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    powerup.setActive(false);\r\n                    laser.setActive(false);\r\n                    invincible = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //checks if the player has lost a life or lost the game\r\n    public void lifeLoss() {\r\n        for (Enemy enemy : enemies) {\r\n            if (enemy.getY() > player.getY()) {\r\n                enemy.setActive(false);\r\n                if (!invincible) {\r\n                    player.setLives(player.getLives() - 1);\r\n                }\r\n            }\r\n            if (player.getLives() <= 0) {\r\n                player.setActive(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    //deletes inactive objects every frame\r\n    public void deleteInactive() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            if (!(enemies.get(i).isActive())) {\r\n                enemies.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            if (!(lasers.get(i).isActive())) {\r\n                lasers.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n            if (!(powerUps.get(i).isActive())) {\r\n                powerUps.remove(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    //reset the game\r\n    public void reset() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            enemies.remove(i);\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            lasers.remove(i);\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n            powerUps.remove(i);\r\n        }\r\n\r\n        points = 0;\r\n        player.setLives(3);\r\n    }\r\n\r\n    //spawn objects at a certain rate (rate decided in UserScreen)\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        spawnEnemy();\r\n        counter++;\r\n        if (counter % 10 == 0) {\r\n            spawnPowerUp();\r\n        }\r\n        if (invincible) {\r\n            powerUpReset++;\r\n            if ((powerUpReset % 5 == 0) && powerUpReset != 0) {\r\n                invincible = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //getters\r\n    public int getPoints() {\r\n        return points;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Level3Manager.java b/src/Level3Manager.java
--- a/src/Level3Manager.java	(revision ad1457658669abf389897c76695ff921db933662)
+++ b/src/Level3Manager.java	(date 1653510647781)
@@ -26,7 +26,7 @@
 
     //adds an enemy to the array list, priming it to be spawned
     public void spawnEnemy() {
-        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));
+        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90, 3));
     }
 
     //adds a new laser to the array list
Index: src/Level4Manager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\npublic class Level4Manager implements ActionListener {\r\n\r\n    //instance variables\r\n    private Player player;\r\n    private ArrayList<Enemy> enemies;\r\n    private ArrayList<Laser> lasers;\r\n    private ArrayList<PowerUp> powerUps;\r\n\r\n    private int points = 0;\r\n    private int counter = 0;\r\n\r\n    private int timeCounter = 0;\r\n    private boolean hasPowerUp = false;\r\n\r\n    //constructor\r\n    public Level4Manager(Player player) {\r\n        this.player = player;\r\n        enemies = new ArrayList<Enemy>();\r\n        lasers = new ArrayList<Laser>();\r\n        powerUps = new ArrayList<PowerUp>();\r\n    }\r\n\r\n    //adds an enemy to the array list, priming it to be spawned\r\n    public void spawnEnemy() {\r\n        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //adds a new laser to the array list\r\n    public void shootLaser() {\r\n        lasers.add(new Laser(player.getX() + 40, 860, 8, 40));\r\n    }\r\n\r\n    //method for shooting 3 lasers at once\r\n    public void shoot3Lasers() {\r\n        lasers.add(new Laser(player.getX() - 10, 860, 8, 40));\r\n        lasers.add(new Laser(player.getX() + 40, 860, 8, 40));\r\n        lasers.add(new Laser(player.getX() + 90, 860, 8, 40));\r\n    }\r\n\r\n    //adds a power-up to the array list, priming it to be spawned in\r\n    public void spawnPowerUp() {\r\n        powerUps.add(new PowerUp((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //draw game objects onto the screen\r\n    public void drawObjects(Graphics g) {\r\n        player.draw(g);\r\n        for (Enemy enemy : enemies) {\r\n            enemy.draw(g);\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.draw(g);\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.draw(g);\r\n        }\r\n    }\r\n\r\n    //update all objects each frame\r\n    public void updateObjects() {\r\n        for (Enemy enemy : enemies) {\r\n            enemy.updateEnemy();\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.updateLaser();\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.updatePowerUp();\r\n        }\r\n\r\n        checkCollisions();\r\n        lifeLoss();\r\n        deleteInactive();\r\n    }\r\n\r\n    //checks which objects have been collided with\r\n    public void checkCollisions() {\r\n        for (Enemy enemy : enemies) {\r\n            for (Laser laser : lasers) {\r\n                if (enemy.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    enemy.setActive(false);\r\n                    laser.setActive(false);\r\n                    points += 400;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (PowerUp powerup : powerUps) {\r\n            for (Laser laser : lasers) {\r\n                if (powerup.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    powerup.setActive(false);\r\n                    laser.setActive(false);\r\n                    hasPowerUp = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //checks if the player has lost a life or lost the game\r\n    public void lifeLoss() {\r\n        for (Enemy enemy : enemies) {\r\n            if (enemy.getY() > player.getY()) {\r\n                enemy.setActive(false);\r\n                player.setLives(player.getLives()-1);\r\n            }\r\n        }\r\n\r\n        if (player.getLives() == 0) {\r\n            player.setActive(false);\r\n        }\r\n    }\r\n\r\n    //deletes inactive objects every frame\r\n    public void deleteInactive() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            if (!(enemies.get(i).isActive())) {\r\n                enemies.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            if (!(lasers.get(i).isActive())) {\r\n                lasers.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n            if (!(powerUps.get(i).isActive())) {\r\n                powerUps.remove(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    //reset the game\r\n    public void reset() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            enemies.remove(i);\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            lasers.remove(i);\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n            powerUps.remove(i);\r\n        }\r\n\r\n        points = 0;\r\n        player.setLives(3);\r\n    }\r\n\r\n    //spawn objects at a certain rate (rate decided in UserScreen)\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        spawnEnemy();\r\n        counter++;\r\n        if (counter % 10 == 0) {\r\n            spawnPowerUp();\r\n        }\r\n\r\n        if (hasPowerUp) {\r\n            timeCounter++;\r\n        }\r\n        if (timeCounter % 10 == 0) {\r\n            hasPowerUp = false;\r\n        }\r\n    }\r\n\r\n    //getters\r\n    public int getPoints() {\r\n        return points;\r\n    }\r\n\r\n    public boolean hasPowerUp() {\r\n        return hasPowerUp;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Level4Manager.java b/src/Level4Manager.java
--- a/src/Level4Manager.java	(revision ad1457658669abf389897c76695ff921db933662)
+++ b/src/Level4Manager.java	(date 1653510647718)
@@ -26,7 +26,7 @@
 
     //adds an enemy to the array list, priming it to be spawned
     public void spawnEnemy() {
-        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));
+        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90, 4));
     }
 
     //adds a new laser to the array list
Index: src/Enemy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.imageio.ImageIO;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.util.Objects;\r\n\r\npublic class Enemy extends GameObject {\r\n\r\n    //image loading variables\r\n    public static BufferedImage image;\r\n    public static BufferedImage image2;\r\n    public static BufferedImage image3;\r\n    public static BufferedImage image4;\r\n\r\n\r\n    //constructor\r\n    public Enemy(int x, int y, int width, int height) {\r\n        super(x, y, width, height, 0, 1);\r\n\r\n        loadImage(\"ImagesAndText/enemy.png\");\r\n        loadImage2(\"ImagesAndText/enemy.png\");\r\n        loadImage3(\"ImagesAndText/enemy.png\");\r\n        loadImage4(\"ImagesAndText/enemy.png\");\r\n\r\n    }\r\n\r\n    //draws enemy objects\r\n    public void draw(Graphics g) {\r\n        g.drawImage(image, getX(), getY(), getWidth(), getHeight(), null);\r\n    }\r\n\r\n    //update the enemy's position according to the speed\r\n    public void updateEnemy() {\r\n        setY(getY() + getSpeedY());\r\n        super.update();\r\n    }\r\n\r\n    //image loading method\r\n    private void loadImage(String imageFile) {\r\n        try {\r\n            image = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));\r\n        } catch (Exception e) {\r\n            System.out.println(\"Error at: \" + e.getMessage());\r\n        }\r\n    }\r\n    private void loadImage2(String imageFile) {\r\n        try {\r\n            image2 = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));\r\n        } catch (Exception e) {\r\n            System.out.println(\"Error at: \" + e.getMessage());\r\n        }\r\n    }\r\n    private void loadImage3(String imageFile) {\r\n        try {\r\n            image3 = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));\r\n        } catch (Exception e) {\r\n            System.out.println(\"Error at: \" + e.getMessage());\r\n        }\r\n    }private void loadImage4(String imageFile) {\r\n        try {\r\n            image4 = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));\r\n        } catch (Exception e) {\r\n            System.out.println(\"Error at: \" + e.getMessage());\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Enemy.java b/src/Enemy.java
--- a/src/Enemy.java	(revision ad1457658669abf389897c76695ff921db933662)
+++ b/src/Enemy.java	(date 1653510814306)
@@ -6,21 +6,22 @@
 public class Enemy extends GameObject {
 
     //image loading variables
-    public static BufferedImage image;
-    public static BufferedImage image2;
-    public static BufferedImage image3;
-    public static BufferedImage image4;
-
+    private static BufferedImage image;
 
     //constructor
-    public Enemy(int x, int y, int width, int height) {
+    public Enemy(int x, int y, int width, int height, int imageNumber) {
         super(x, y, width, height, 0, 1);
-
-        loadImage("ImagesAndText/enemy.png");
-        loadImage2("ImagesAndText/enemy.png");
-        loadImage3("ImagesAndText/enemy.png");
-        loadImage4("ImagesAndText/enemy.png");
-
+        if(imageNumber == 1) {
+            loadImage("ImagesAndText/enemy.png");
+        } else if(imageNumber == 2) {
+            loadImage("ImagesAndText/enemy.png");
+        } else if(imageNumber == 3) {
+            loadImage("ImagesAndText/enemy.png");
+        } else if(imageNumber == 4) {
+            loadImage("ImagesAndText/enemy.png");
+        } else {
+            System.out.println("Number for ImageFile Invalid");
+        }
     }
 
     //draws enemy objects
@@ -40,26 +41,6 @@
             image = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));
         } catch (Exception e) {
             System.out.println("Error at: " + e.getMessage());
-        }
-    }
-    private void loadImage2(String imageFile) {
-        try {
-            image2 = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));
-        } catch (Exception e) {
-            System.out.println("Error at: " + e.getMessage());
-        }
-    }
-    private void loadImage3(String imageFile) {
-        try {
-            image3 = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));
-        } catch (Exception e) {
-            System.out.println("Error at: " + e.getMessage());
-        }
-    }private void loadImage4(String imageFile) {
-        try {
-            image4 = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));
-        } catch (Exception e) {
-            System.out.println("Error at: " + e.getMessage());
         }
     }
 }
Index: src/GameManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\npublic class GameManager implements ActionListener {\r\n\r\n    //instance variables\r\n    private Player player;\r\n    private ArrayList<Enemy> enemies;\r\n    private ArrayList<Laser> lasers;\r\n    private ArrayList<PowerUp> powerUps;\r\n\r\n    private int points = 0;\r\n    private int counter = 0;\r\n\r\n    //constructor\r\n    public GameManager(Player player) {\r\n        this.player = player;\r\n        enemies = new ArrayList<Enemy>();\r\n        lasers = new ArrayList<Laser>();\r\n        powerUps = new ArrayList<PowerUp>();\r\n    }\r\n\r\n    //adds an enemy to the array list, priming it to be spawned\r\n    public void spawnEnemy() {\r\n        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //adds a new laser to the array list\r\n    public void shootLaser() {\r\n        lasers.add(new Laser(player.getX() + 40, 860, 8, 40));\r\n    }\r\n\r\n    //adds a power-up to the array list, priming it to be spawned in\r\n    public void spawnPowerUp() {\r\n        powerUps.add(new PowerUp((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //draw game objects onto the screen\r\n    public void drawObjects(Graphics g) {\r\n        player.draw(g);\r\n        for (Enemy enemy : enemies) {\r\n            enemy.draw(g);\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.draw(g);\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.draw(g);\r\n        }\r\n    }\r\n\r\n    //update all objects each frame\r\n    public void updateObjects() {\r\n        for (Enemy enemy : enemies) {\r\n            enemy.updateEnemy();\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.updateLaser();\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.updatePowerUp();\r\n        }\r\n\r\n        checkCollisions();\r\n        lifeLoss();\r\n        deleteInactive();\r\n    }\r\n\r\n    //checks which objects have been collided with\r\n    public void checkCollisions() {\r\n        for (Enemy enemy : enemies) {\r\n            for (Laser laser : lasers) {\r\n                if (enemy.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    enemy.setActive(false);\r\n                    laser.setActive(false);\r\n                    points += 100;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (PowerUp powerup : powerUps) {\r\n            for (Laser laser : lasers) {\r\n                if (powerup.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    powerup.setActive(false);\r\n                    laser.setActive(false);\r\n                    points += 500;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //checks if the player has lost a life or lost the game\r\n    public void lifeLoss() {\r\n        for (Enemy enemy : enemies) {\r\n            if (enemy.getY() > player.getY()) {\r\n                enemy.setActive(false);\r\n                player.setLives(player.getLives()-1);\r\n            }\r\n        }\r\n\r\n        if (player.getLives() == 0) {\r\n            player.setActive(false);\r\n        }\r\n    }\r\n\r\n    //deletes inactive objects every frame\r\n    public void deleteInactive() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            if (!(enemies.get(i).isActive())) {\r\n                enemies.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            if (!(lasers.get(i).isActive())) {\r\n                lasers.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n            if (!(powerUps.get(i).isActive())) {\r\n                powerUps.remove(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    //reset the game\r\n    public void reset() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n                enemies.remove(i);\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n                lasers.remove(i);\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n                powerUps.remove(i);\r\n        }\r\n\r\n        points = 0;\r\n        player.setLives(3);\r\n    }\r\n\r\n    //spawn objects at a certain rate (rate decided in UserScreen)\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        spawnEnemy();\r\n        counter++;\r\n        if (counter % 10 == 0) {\r\n            spawnPowerUp();\r\n        }\r\n    }\r\n\r\n    //getters\r\n    public String getPoints() {\r\n        return \"\" + points;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GameManager.java b/src/GameManager.java
--- a/src/GameManager.java	(revision ad1457658669abf389897c76695ff921db933662)
+++ b/src/GameManager.java	(date 1653510660486)
@@ -23,7 +23,7 @@
 
     //adds an enemy to the array list, priming it to be spawned
     public void spawnEnemy() {
-        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));
+        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90, 1));
     }
 
     //adds a new laser to the array list
Index: src/UserScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.util.Objects;\r\n\r\npublic class UserScreen extends JPanel implements ActionListener, KeyListener {\r\n\r\n    //image loading variables\r\n    public static BufferedImage image;\r\n    public static BufferedImage image2;\r\n    public static BufferedImage image3;\r\n    public static BufferedImage image4;\r\n\r\n\r\n    //instance variables\r\n    private Player player;\r\n    private WordReader wordReader;\r\n    private Timer drawFrame;\r\n    private Timer spawner;\r\n    private Status status = Status.MENU;\r\n    private Status tempStatus;\r\n    private int tempScore;\r\n    private int highScore = 0;\r\n\r\n    //game managers\r\n    private Level1Manager level1Manager;\r\n    private Level2Manager level2Manager;\r\n    private Level3Manager level3Manager;\r\n    private Level4Manager level4Manager;\r\n\r\n    //constructor\r\n    public UserScreen() {\r\n        player = new Player(500, 860, 90, 90);\r\n\r\n        level1Manager = new Level1Manager(player);\r\n        level2Manager = new Level2Manager(player);\r\n        level3Manager = new Level3Manager(player);\r\n        level4Manager = new Level4Manager(player);\r\n\r\n        //timer that runs the \"frame rate\"\r\n        drawFrame = new Timer(1000 / 90, this);\r\n        drawFrame.start();\r\n        //change space.jpg to whatever you want du\r\n        loadImage(\"ImagesAndText/space.jpg\");\r\n        loadImage2(\"ImagesAndText/space.jpg\");\r\n        loadImage3(\"ImagesAndText/space.jpg\");\r\n        loadImage4(\"ImagesAndText/space.jpg\");\r\n\r\n    }\r\n\r\n    //draws the menu screen\r\n    public void drawMenuScreen(Graphics g) {\r\n        g.setColor(Color.BLACK);\r\n        g.fillRect(0, 0, WordInvadersDriver.WIDTH, WordInvadersDriver.HEIGHT);\r\n\r\n        g.setFont(new Font(\"Arial\", Font.PLAIN, 30));\r\n\r\n        g.setColor(Color.WHITE);\r\n        g.drawString(\"WORD INVADERS\", 350, 150);\r\n        g.drawString(\"Press key: 1, 2, 3, 4 for respective levels\", 200, 250);\r\n        g.drawString(\"Level 1: Easy\", 350, 400);\r\n        g.drawString(\"Level 2: Medium\", 350, 450);\r\n        g.drawString(\"Level 3: Hard\", 350, 500);\r\n        g.drawString(\"Level 4: IMPOSSIBLE\", 350, 550);\r\n        g.drawString(\"High Score: \" + highScore, 370, 650);\r\n        g.drawString(\"Press SPACE for instructions\", 280, 800);\r\n    }\r\n\r\n    //draws the instructions screen\r\n    public void drawInstructionsScreen(Graphics g) {\r\n        g.setColor(Color.WHITE);\r\n        g.fillRect(0, 0, WordInvadersDriver.WIDTH, WordInvadersDriver.HEIGHT);\r\n\r\n        g.setColor(Color.BLACK);\r\n        g.setFont(new Font(\"Arial\", Font.PLAIN, 30));\r\n        g.drawString(\"How to play WORD INVADERS:\", 250, 100);\r\n\r\n        g.setFont(new Font(\"Arial\", Font.PLAIN, 20));\r\n        g.drawString(\"Word Invaders is an outer-space themed game designed to improve your typing skills. \", 100, 200);\r\n        g.drawString(\"The objective of the game is to obtain as many points as you can on each level, \", 100, 230);\r\n        g.drawString(\"while simultaneously becoming a better typist. Use left and right arrow keys \", 100, 260);\r\n        g.drawString(\"to position your spaceship beneath an enemy spacecraft, and correctly type in \", 100, 290);\r\n        g.drawString(\"the word at the top of your screen, then press enter to fire a laser. If the \", 100, 320);\r\n        g.drawString(\"laser collides with an enemy, you gain points and the enemy is destroyed. If \", 100, 350);\r\n        g.drawString(\"the word is incorrectly typed, you will lose a life and a laser-beam will not fire. \", 100, 380);\r\n        g.drawString(\"Additionally, if an enemy is allowed to reach the bottom of your screen, you \", 100, 410);\r\n        g.drawString(\"will lose a life. Lose all of your lives, and it's game over! Each level is \", 100, 440);\r\n        g.drawString(\"a certain difficulty; in harder levels the enemies spawn faster and the words \", 100, 470);\r\n        g.drawString(\"that you must type are longer. Each level also has it's own power-ups, which \", 100, 500);\r\n        g.drawString(\"provide boosts such as temporary invincibility. Good luck and happy typing!\", 100, 530);\r\n\r\n        g.setFont(new Font(\"Arial\", Font.PLAIN, 30));\r\n        g.drawString(\"Press SPACE to return to menu\", 250, 700);\r\n    }\r\n\r\n    //draws the game-over screen\r\n    public void drawEndScreen(Graphics g) {\r\n        g.setColor(Color.RED);\r\n        g.fillRect(0, 0, WordInvadersDriver.WIDTH, WordInvadersDriver.HEIGHT);\r\n\r\n        g.setFont(new Font(\"Arial\", Font.PLAIN, 50));\r\n\r\n        g.setColor(Color.BLACK);\r\n        g.drawString(\"GAME OVER!\", 320, 200);\r\n        g.drawString(\"Press SPACE to return to menu\", 150, 600);\r\n\r\n        switch (tempStatus) {\r\n            case LEVEL1:\r\n                g.drawString(\"You scored \" + level1Manager.getPoints() + \" points\", 250, 400);\r\n                tempScore = level1Manager.getPoints();\r\n                break;\r\n            case LEVEL2:\r\n                g.drawString(\"You scored \" + level2Manager.getPoints() + \" points\", 250, 400);\r\n                tempScore = level2Manager.getPoints();\r\n                break;\r\n            case LEVEL3:\r\n                g.drawString(\"You scored \" + level3Manager.getPoints() + \" points\", 250, 400);\r\n                tempScore = level3Manager.getPoints();\r\n                break;\r\n            case LEVEL4:\r\n                g.drawString(\"You scored \" + level4Manager.getPoints() + \" points\", 250, 400);\r\n                tempScore = level4Manager.getPoints();\r\n                break;\r\n        }\r\n\r\n        if (tempScore > highScore) {\r\n            highScore = tempScore;\r\n        }\r\n    }\r\n\r\n    //paint the screen (JPanel) with active objects\r\n    @Override\r\n    public void paintComponent(Graphics g) {\r\n        switch (status) {\r\n            case MENU:\r\n                drawMenuScreen(g);\r\n                break;\r\n            case INSTRUCTIONS:\r\n                drawInstructionsScreen(g);\r\n                break;\r\n            case LEVEL1:\r\n                drawLevel1Screen(g);\r\n                break;\r\n            case LEVEL2:\r\n                drawLevel2Screen(g);\r\n                break;\r\n            case LEVEL3:\r\n                drawLevel3Screen(g);\r\n                break;\r\n            case LEVEL4:\r\n                drawLevel4Screen(g);\r\n                break;\r\n            case END:\r\n                drawEndScreen(g);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //draw text for the level at the top of the screen\r\n    public void drawText(Graphics g) {\r\n        g.setFont(new Font(\"Arial\", Font.PLAIN, 30));\r\n\r\n        g.setColor(Color.GREEN);\r\n        switch (status) {\r\n            case LEVEL1:\r\n                g.drawString(\"Score: \" + level1Manager.getPoints(), 10, 30);\r\n                break;\r\n            case LEVEL2:\r\n                g.drawString(\"Score: \" + level2Manager.getPoints(), 10, 30);\r\n                break;\r\n            case LEVEL3:\r\n                g.drawString(\"Score: \" + level3Manager.getPoints(), 10, 30);\r\n                break;\r\n            case LEVEL4:\r\n                g.drawString(\"Score: \" + level4Manager.getPoints(), 10, 30);\r\n                break;\r\n        }\r\n        g.drawString(\"Type: \" + wordReader.getCurrentWord(), 415, 30);\r\n        g.drawString(\"Lives: \" + player.getLives(), 870, 30);\r\n\r\n        g.setColor(Color.WHITE);\r\n        g.drawString(wordReader.getWordTyped(), 440, 70);\r\n    }\r\n\r\n    //draws the level 1 screen\r\n    public void drawLevel1Screen(Graphics g) {\r\n        g.drawImage(image, 0, 0, null);\r\n        level1Manager.drawObjects(g);\r\n        drawText(g);\r\n    }\r\n\r\n    //updates level 1 objects at a certain rate\r\n    public void updateLevel1Screen() {\r\n        player.updatePlayer();\r\n        level1Manager.updateObjects();\r\n\r\n        if (!(player.isActive())) {\r\n            status = Status.END;\r\n            spawner.stop();\r\n        }\r\n    }\r\n\r\n    //draws the level 2 screen\r\n    public void drawLevel2Screen(Graphics g) {\r\n        g.drawImage(image2, 0, 0, null);\r\n        level2Manager.drawObjects(g);\r\n        drawText(g);\r\n    }\r\n\r\n    //updates level 2 objects at a certain rate\r\n    public void updateLevel2Screen() {\r\n        player.updatePlayer();\r\n        level2Manager.updateObjects();\r\n\r\n        if (!(player.isActive())) {\r\n            status = Status.END;\r\n            spawner.stop();\r\n        }\r\n    }\r\n\r\n    //draws the level 3 screen\r\n    public void drawLevel3Screen(Graphics g) {\r\n        g.drawImage(image3, 0, 0, null);\r\n        level3Manager.drawObjects(g);\r\n        drawText(g);\r\n    }\r\n\r\n    //updates level 3 objects at a certain rate\r\n    public void updateLevel3Screen() {\r\n        player.updatePlayer();\r\n        level3Manager.updateObjects();\r\n\r\n        if (!(player.isActive())) {\r\n            status = Status.END;\r\n            spawner.stop();\r\n        }\r\n    }\r\n\r\n    //draws the level 4 screen\r\n    public void drawLevel4Screen(Graphics g) {\r\n        g.drawImage(image4, 0, 0, null);\r\n        level4Manager.drawObjects(g);\r\n        drawText(g);\r\n    }\r\n\r\n    //updates level 4 objects at a certain rate\r\n    public void updateLevel4Screen() {\r\n        player.updatePlayer();\r\n        level4Manager.updateObjects();\r\n\r\n        if (!(player.isActive())) {\r\n            status = Status.END;\r\n            spawner.stop();\r\n        }\r\n    }\r\n\r\n    //key and action listener methods:\r\n    //action performed method runs at a certain frame rate\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        //update all objects then repaint the screen\r\n        switch (status) {\r\n            case LEVEL1:\r\n                updateLevel1Screen();\r\n                break;\r\n            case LEVEL2:\r\n                updateLevel2Screen();\r\n                break;\r\n            case LEVEL3:\r\n                updateLevel3Screen();\r\n                break;\r\n            case LEVEL4:\r\n                updateLevel4Screen();\r\n                break;\r\n        }\r\n        repaint();\r\n    }\r\n\r\n    //reads when a key is typed by the user\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n    }\r\n\r\n    //reads when the user presses a key and translates into code\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n        if (status == Status.LEVEL1 || status == Status.LEVEL2 || status == Status.LEVEL3 || status == Status.LEVEL4) {\r\n            //player movement controllers\r\n            if (e.getKeyCode() == KeyEvent.VK_LEFT) {\r\n                player.moveLeft();\r\n            } else if (e.getKeyCode() == KeyEvent.VK_RIGHT) {\r\n                player.moveRight();\r\n            }\r\n\r\n            //check what the user is typing\r\n            if (e.getKeyCode() == KeyEvent.VK_A) {\r\n                wordReader.addLetter(\"a\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_B) {\r\n                wordReader.addLetter(\"b\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_C) {\r\n                wordReader.addLetter(\"c\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_D) {\r\n                wordReader.addLetter(\"d\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_E) {\r\n                wordReader.addLetter(\"e\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_F) {\r\n                wordReader.addLetter(\"f\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_G) {\r\n                wordReader.addLetter(\"g\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_H) {\r\n                wordReader.addLetter(\"h\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_I) {\r\n                wordReader.addLetter(\"i\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_J) {\r\n                wordReader.addLetter(\"j\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_K) {\r\n                wordReader.addLetter(\"k\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_L) {\r\n                wordReader.addLetter(\"l\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_M) {\r\n                wordReader.addLetter(\"m\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_N) {\r\n                wordReader.addLetter(\"n\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_O) {\r\n                wordReader.addLetter(\"o\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_P) {\r\n                wordReader.addLetter(\"p\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_Q) {\r\n                wordReader.addLetter(\"q\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_R) {\r\n                wordReader.addLetter(\"r\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_S) {\r\n                wordReader.addLetter(\"s\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_T) {\r\n                wordReader.addLetter(\"t\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_U) {\r\n                wordReader.addLetter(\"u\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_V) {\r\n                wordReader.addLetter(\"v\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_W) {\r\n                wordReader.addLetter(\"w\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_X) {\r\n                wordReader.addLetter(\"x\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_Y) {\r\n                wordReader.addLetter(\"y\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_Z) {\r\n                wordReader.addLetter(\"z\");\r\n            } else if (e.getKeyCode() == KeyEvent.VK_BACK_SPACE) {\r\n                wordReader.backspace();\r\n            }\r\n        }\r\n\r\n        //check what game state we are in\r\n        switch (status) {\r\n            case MENU:\r\n                if (e.getKeyCode() == KeyEvent.VK_1) {\r\n                    status = Status.LEVEL1;\r\n                    tempStatus = Status.LEVEL1;\r\n                    wordReader = new WordReader(4);\r\n                    spawner = new Timer(4000, level1Manager);\r\n                    spawner.start();\r\n                } else if (e.getKeyCode() == KeyEvent.VK_2) {\r\n                    status = Status.LEVEL2;\r\n                    tempStatus = Status.LEVEL2;\r\n                    wordReader = new WordReader(5);\r\n                    spawner = new Timer(3000, level2Manager);\r\n                    spawner.start();\r\n                } else if (e.getKeyCode() == KeyEvent.VK_3) {\r\n                    status = Status.LEVEL3;\r\n                    tempStatus = Status.LEVEL3;\r\n                    wordReader = new WordReader(6);\r\n                    spawner = new Timer(2000, level3Manager);\r\n                    spawner.start();\r\n                } else if (e.getKeyCode() == KeyEvent.VK_4) {\r\n                    status = Status.LEVEL4;\r\n                    tempStatus = Status.LEVEL4;\r\n                    wordReader = new WordReader(6);\r\n                    spawner = new Timer(1000, level4Manager);\r\n                    spawner.start();\r\n                }\r\n                if (e.getKeyCode() == KeyEvent.VK_SPACE) {\r\n                    status = Status.INSTRUCTIONS;\r\n                }\r\n                break;\r\n            case INSTRUCTIONS:\r\n                if (e.getKeyCode() == KeyEvent.VK_SPACE) {\r\n                    status = Status.MENU;\r\n                }\r\n                break;\r\n            case LEVEL1:\r\n                //if the user has typed the correct word, fire laser\r\n                if (e.getKeyCode() == KeyEvent.VK_ENTER) {\r\n                    if (wordReader.getWordTyped().equals(wordReader.getCurrentWord())) {\r\n                        level1Manager.shootLaser();\r\n                    } else {\r\n                        player.setLives(player.getLives() - 1);\r\n                    }\r\n                    wordReader.setWordTyped(\"\");\r\n                    wordReader.newWord();\r\n                }\r\n                break;\r\n            case LEVEL2:\r\n                //if the user has typed the correct word, fire laser\r\n                if (e.getKeyCode() == KeyEvent.VK_ENTER) {\r\n                    if (wordReader.getWordTyped().equals(wordReader.getCurrentWord())) {\r\n                        level2Manager.shootLaser();\r\n                    } else {\r\n                        player.setLives(player.getLives() - 1);\r\n                    }\r\n                    wordReader.setWordTyped(\"\");\r\n                    wordReader.newWord();\r\n                }\r\n                break;\r\n            case LEVEL3:\r\n                //if the user has typed the correct word, fire laser\r\n                if (e.getKeyCode() == KeyEvent.VK_ENTER) {\r\n                    if (wordReader.getWordTyped().equals(wordReader.getCurrentWord())) {\r\n                        level3Manager.shootLaser();\r\n                    } else {\r\n                        player.setLives(player.getLives() - 1);\r\n                    }\r\n                    wordReader.setWordTyped(\"\");\r\n                    wordReader.newWord();\r\n                }\r\n                break;\r\n            case LEVEL4:\r\n                //if the user has typed the correct word, fire laser\r\n                if (e.getKeyCode() == KeyEvent.VK_ENTER) {\r\n                    if (wordReader.getWordTyped().equals(wordReader.getCurrentWord())) {\r\n                        if (level4Manager.hasPowerUp()) {\r\n                            level4Manager.shoot3Lasers();\r\n                        } else {\r\n                            level4Manager.shootLaser();\r\n                        }\r\n                    } else {\r\n                        player.setLives(player.getLives() - 1);\r\n                    }\r\n                    wordReader.setWordTyped(\"\");\r\n                    wordReader.newWord();\r\n                }\r\n                break;\r\n            case END:\r\n                if (e.getKeyCode() == KeyEvent.VK_SPACE) {\r\n                    status = Status.MENU;\r\n                    player.setActive(true);\r\n                    level1Manager.reset();\r\n                    level2Manager.reset();\r\n                    level3Manager.reset();\r\n                    level4Manager.reset();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    //stops movement upon release of a key\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n        player.setSpeedX(0);\r\n    }\r\n\r\n    //image loading method\r\n    private void loadImage(String imageFile) {\r\n        try {\r\n            image = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));\r\n        } catch (Exception e) {\r\n            System.out.println(\"Error at: \" + e.getMessage());\r\n        }\r\n    }\r\n    private void loadImage2(String imageFile) {\r\n        try {\r\n            image2 = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));\r\n        } catch (Exception e) {\r\n            System.out.println(\"Error at: \" + e.getMessage());\r\n        }\r\n    }\r\n    private void loadImage3(String imageFile) {\r\n        try {\r\n            image3 = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));\r\n        } catch (Exception e) {\r\n            System.out.println(\"Error at: \" + e.getMessage());\r\n        }\r\n    }\r\n    private void loadImage4(String imageFile) {\r\n        try {\r\n            image4 = ImageIO.read(Objects.requireNonNull(this.getClass().getResourceAsStream(imageFile)));\r\n        } catch (Exception e) {\r\n            System.out.println(\"Error at: \" + e.getMessage());\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/UserScreen.java b/src/UserScreen.java
--- a/src/UserScreen.java	(revision ad1457658669abf389897c76695ff921db933662)
+++ b/src/UserScreen.java	(date 1653510595841)
@@ -42,7 +42,7 @@
         //timer that runs the "frame rate"
         drawFrame = new Timer(1000 / 90, this);
         drawFrame.start();
-        //change space.jpg to whatever you want du
+        //change space.jpg to whatever you want
         loadImage("ImagesAndText/space.jpg");
         loadImage2("ImagesAndText/space.jpg");
         loadImage3("ImagesAndText/space.jpg");
Index: src/Level2Manager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\npublic class Level2Manager implements ActionListener {\r\n\r\n    //instance variables\r\n    private Player player;\r\n    private ArrayList<Enemy> enemies;\r\n    private ArrayList<Laser> lasers;\r\n    private ArrayList<PowerUp> powerUps;\r\n\r\n    private int points = 0;\r\n    private int counter = 0;\r\n\r\n    //constructor\r\n    public Level2Manager(Player player) {\r\n        this.player = player;\r\n        enemies = new ArrayList<Enemy>();\r\n        lasers = new ArrayList<Laser>();\r\n        powerUps = new ArrayList<PowerUp>();\r\n    }\r\n\r\n    //adds an enemy to the array list, priming it to be spawned\r\n    public void spawnEnemy() {\r\n        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //adds a new laser to the array list\r\n    public void shootLaser() {\r\n        lasers.add(new Laser(player.getX() + 40, 860, 8, 40));\r\n    }\r\n\r\n    //adds a power-up to the array list, priming it to be spawned in\r\n    public void spawnPowerUp() {\r\n        powerUps.add(new PowerUp((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //draw game objects onto the screen\r\n    public void drawObjects(Graphics g) {\r\n        player.draw(g);\r\n        for (Enemy enemy : enemies) {\r\n            enemy.draw(g);\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.draw(g);\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.draw(g);\r\n        }\r\n    }\r\n\r\n    //update all objects each frame\r\n    public void updateObjects() {\r\n        for (Enemy enemy : enemies) {\r\n            enemy.updateEnemy();\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.updateLaser();\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.updatePowerUp();\r\n        }\r\n\r\n        checkCollisions();\r\n        lifeLoss();\r\n        deleteInactive();\r\n    }\r\n\r\n    //checks which objects have been collided with\r\n    public void checkCollisions() {\r\n        for (Enemy enemy : enemies) {\r\n            for (Laser laser : lasers) {\r\n                if (enemy.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    enemy.setActive(false);\r\n                    laser.setActive(false);\r\n                    points += 200;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (PowerUp powerup : powerUps) {\r\n            for (Laser laser : lasers) {\r\n                if (powerup.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    powerup.setActive(false);\r\n                    laser.setActive(false);\r\n                    player.setLives(player.getLives()+1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //checks if the player has lost a life or lost the game\r\n    public void lifeLoss() {\r\n        for (Enemy enemy : enemies) {\r\n            if (enemy.getY() > player.getY()) {\r\n                enemy.setActive(false);\r\n                player.setLives(player.getLives()-1);\r\n            }\r\n        }\r\n\r\n        if (player.getLives() == 0) {\r\n            player.setActive(false);\r\n        }\r\n    }\r\n\r\n    //deletes inactive objects every frame\r\n    public void deleteInactive() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            if (!(enemies.get(i).isActive())) {\r\n                enemies.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            if (!(lasers.get(i).isActive())) {\r\n                lasers.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n            if (!(powerUps.get(i).isActive())) {\r\n                powerUps.remove(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    //reset the game\r\n    public void reset() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            enemies.remove(i);\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            lasers.remove(i);\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n            powerUps.remove(i);\r\n        }\r\n\r\n        points = 0;\r\n        player.setLives(3);\r\n    }\r\n\r\n    //spawn objects at a certain rate (rate decided in UserScreen)\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        spawnEnemy();\r\n        counter++;\r\n        if (counter % 10 == 0) {\r\n            spawnPowerUp();\r\n        }\r\n    }\r\n\r\n    //getters\r\n    public int getPoints() {\r\n        return points;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Level2Manager.java b/src/Level2Manager.java
--- a/src/Level2Manager.java	(revision ad1457658669abf389897c76695ff921db933662)
+++ b/src/Level2Manager.java	(date 1653510647734)
@@ -23,7 +23,7 @@
 
     //adds an enemy to the array list, priming it to be spawned
     public void spawnEnemy() {
-        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));
+        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90, 2));
     }
 
     //adds a new laser to the array list
Index: src/Level1Manager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\npublic class Level1Manager implements ActionListener {\r\n\r\n    //instance variables\r\n    private Player player;\r\n    private ArrayList<Enemy> enemies;\r\n    private ArrayList<Laser> lasers;\r\n    private ArrayList<PowerUp> powerUps;\r\n\r\n    private int counter;\r\n    private boolean powerUp;\r\n\r\n    private int points = 0;\r\n    private int count;\r\n\r\n    //constructor\r\n    public Level1Manager(Player player) {\r\n        this.player = player;\r\n        enemies = new ArrayList<Enemy>();\r\n        lasers = new ArrayList<Laser>();\r\n        powerUps = new ArrayList<PowerUp>();\r\n        powerUp = false;\r\n        count = 0;\r\n    }\r\n\r\n    //adds an enemy to the array list, priming it to be spawned\r\n    public void spawnEnemy() {\r\n        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //adds a new laser to the array list\r\n    public void shootLaser() {\r\n        lasers.add(new Laser(player.getX() + 40, 860, 8, 40));\r\n    }\r\n\r\n    //adds a power-up to the array list, priming it to be spawned in\r\n    public void spawnPowerUp() {\r\n        powerUps.add(new PowerUp((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));\r\n    }\r\n\r\n    //draw game objects onto the screen\r\n    public void drawObjects(Graphics g) {\r\n        player.draw(g);\r\n        for (Enemy enemy : enemies) {\r\n            enemy.draw(g);\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.draw(g);\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.draw(g);\r\n        }\r\n    }\r\n\r\n    //update all objects each frame\r\n    public void updateObjects() {\r\n        for (Enemy enemy : enemies) {\r\n            enemy.updateEnemy();\r\n        }\r\n        for (Laser laser : lasers) {\r\n            laser.updateLaser();\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            powerup.updatePowerUp();\r\n        }\r\n\r\n        checkCollisions();\r\n        lifeLoss();\r\n        deleteInactive();\r\n    }\r\n\r\n    //checks which objects have been collided with\r\n    public void checkCollisions() {\r\n\r\n        if(powerUp == false) {\r\n            for (Enemy enemy : enemies) {\r\n                for (Laser laser : lasers) {\r\n                    if (enemy.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n\r\n                        enemy.setActive(false);\r\n                        laser.setActive(false);\r\n                        points += 100;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(powerUp == true && count <= 10) {\r\n\r\n            for (Enemy enemy : enemies) {\r\n                for (Laser laser : lasers) {\r\n                    if (enemy.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                        enemy.setActive(false);\r\n                        laser.setActive(false);\r\n                        points += 200;\r\n                        count++;\r\n                    }\r\n                    if(count == 10){\r\n                        powerUp = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (PowerUp powerup : powerUps) {\r\n            for (Laser laser : lasers) {\r\n                if (powerup.getCollisionBox().intersects(laser.getCollisionBox())) {\r\n                    powerup.setActive(false);\r\n                    laser.setActive(false);\r\n                    powerUp = true;\r\n                    int temp = points;\r\n                    count = 0;\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //checks if the player has lost a life or lost the game\r\n    public void lifeLoss() {\r\n        for (Enemy enemy : enemies) {\r\n            if (enemy.getY() > player.getY()) {\r\n                enemy.setActive(false);\r\n                player.setLives(player.getLives() - 1);\r\n            }\r\n        }\r\n\r\n        if (player.getLives() == 0) {\r\n            player.setActive(false);\r\n        }\r\n    }\r\n\r\n    //deletes inactive objects every frame\r\n    public void deleteInactive() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            if (!(enemies.get(i).isActive())) {\r\n                enemies.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            if (!(lasers.get(i).isActive())) {\r\n                lasers.remove(i);\r\n            }\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n            if (!(powerUps.get(i).isActive())) {\r\n                powerUps.remove(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    //reset the game\r\n    public void reset() {\r\n        for (int i = enemies.size() - 1; i >= 0; i--) {\r\n            enemies.remove(i);\r\n        }\r\n\r\n        for (int i = lasers.size() - 1; i >= 0; i--) {\r\n            lasers.remove(i);\r\n        }\r\n\r\n        for (int i = powerUps.size() - 1; i >= 0; i--) {\r\n            powerUps.remove(i);\r\n        }\r\n\r\n        points = 0;\r\n        player.setLives(3);\r\n    }\r\n\r\n    //spawn objects at a certain rate (rate decided in UserScreen)\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        spawnEnemy();\r\n        counter++;\r\n        if (counter % 10 == 0) {\r\n            spawnPowerUp();\r\n        }\r\n    }\r\n\r\n    //getters\r\n    public int getPoints() {\r\n        return points;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Level1Manager.java b/src/Level1Manager.java
--- a/src/Level1Manager.java	(revision ad1457658669abf389897c76695ff921db933662)
+++ b/src/Level1Manager.java	(date 1653510647765)
@@ -28,7 +28,7 @@
 
     //adds an enemy to the array list, priming it to be spawned
     public void spawnEnemy() {
-        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90));
+        enemies.add(new Enemy((int) (Math.random() * (WordInvadersDriver.WIDTH - 70)), 0, 90, 90, 1));
     }
 
     //adds a new laser to the array list
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ad717c3b-c1b7-40ae-b0e7-6b4ea63b2c7f\" name=\"Changes\" comment=\"cleaned up code\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/ImagesAndText/b1bdc1ae539dcbd1a7c33cef3e5f2d9a.gif\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_8_41_PM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_8_41_PM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_31_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_31_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_46_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_46_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_1_30_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_1_30_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_7_55_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_7_55_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_11_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_11_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_22_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_22_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_43_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_43_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_49_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_49_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_53_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_53_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_28_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_28_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_34_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_34_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_57_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_57_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_1_12_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_1_12_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_3_02_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_3_02_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_9_43_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_9_43_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_10_37_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_10_37_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_01_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_01_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_25_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_25_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_34_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_34_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_57_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_57_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_57_PM__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_57_PM__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_12_02_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_12_02_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_12_54_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_12_54_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_1_10_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_1_10_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_11_57_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_11_57_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_12_05_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_12_05_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_12_34_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_12_34_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_8_39_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_8_39_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Level1Manager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Level1Manager.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"29IwL4yc2Jdr0cwPglVEZQGLwwt\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/tobyp_8bbjnrg/IdeaProjects/WordInvaders/src&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\tobyp_8bbjnrg\\IdeaProjects\\WordInvaders\\src\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"H:\\Projects\\WordInvaders\\src\\Main\" />\r\n      <recent name=\"C:\\Users\\tobyp_8bbjnrg\\IdeaProjects\\WordInvaders\\src\" />\r\n      <recent name=\"H:\\Projects\\WordInvaders\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"WordInvadersDriver\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"WordInvadersDriver\" />\r\n      <module name=\"WordInvaders\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.WordInvadersDriver\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ad717c3b-c1b7-40ae-b0e7-6b4ea63b2c7f\" name=\"Changes\" comment=\"fixed formatting\" />\r\n      <created>1652813851118</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1652813851118</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"int added\">\r\n      <created>1652814922890</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652814922890</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added background fixed movement\">\r\n      <created>1652905995778</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652905995778</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"enemy spawner\">\r\n      <created>1652988307800</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652988307800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"enemy png\">\r\n      <created>1652988813453</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652988813453</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"lasers working\">\r\n      <created>1652990182909</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652990182909</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"cleaned up fonts\">\r\n      <created>1653023930943</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653023930944</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"TYPING WORKS\">\r\n      <created>1653026577401</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653026577401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"powerups\">\r\n      <created>1653074647960</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653074647960</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"powerups\">\r\n      <created>1653074726712</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653074726712</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"fixed powerups\">\r\n      <created>1653076524380</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653076524380</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"fixed powerups\">\r\n      <created>1653076638076</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653076638076</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"fixed formatting\">\r\n      <created>1653077787297</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653077787297</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"screen swapping\">\r\n      <created>1653335625088</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653335625088</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"four and six letter\">\r\n      <created>1653336349525</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653336349525</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"four and six letter\">\r\n      <created>1653336409384</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653336409384</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"level 3 start\">\r\n      <created>1653423352729</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653423352729</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"triple lasers\">\r\n      <created>1653451449835</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653451449835</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"fix\">\r\n      <created>1653452279649</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1653452279649</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"19\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"int added\" />\r\n    <MESSAGE value=\"Added Classes\" />\r\n    <MESSAGE value=\"added background fixed movement\" />\r\n    <MESSAGE value=\"enemy spawner\" />\r\n    <MESSAGE value=\"enemy png\" />\r\n    <MESSAGE value=\"lasers working\" />\r\n    <MESSAGE value=\"cleaned up fonts\" />\r\n    <MESSAGE value=\"TYPING WORKS\" />\r\n    <MESSAGE value=\"powerups\" />\r\n    <MESSAGE value=\"fixed powerups\" />\r\n    <MESSAGE value=\"fixed formatting\" />\r\n    <MESSAGE value=\"screen swapping\" />\r\n    <MESSAGE value=\"four and six letter\" />\r\n    <MESSAGE value=\"four and six letter fixed\" />\r\n    <MESSAGE value=\"level 3 start\" />\r\n    <MESSAGE value=\"triple lasers\" />\r\n    <MESSAGE value=\"fix\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ad1457658669abf389897c76695ff921db933662)
+++ b/.idea/workspace.xml	(date 1653510595622)
@@ -4,42 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ad717c3b-c1b7-40ae-b0e7-6b4ea63b2c7f" name="Changes" comment="cleaned up code">
-      <change afterPath="$PROJECT_DIR$/src/ImagesAndText/b1bdc1ae539dcbd1a7c33cef3e5f2d9a.gif" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_8_41_PM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_2022_8_41_PM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_31_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_31_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_46_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_12_46_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_1_30_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_1_30_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_7_55_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_7_55_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_11_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_11_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_22_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_22_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_43_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_18_2022_8_43_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_49_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_49_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_53_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_11_53_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_28_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_28_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_34_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_34_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_51_PM__Changes_1.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_57_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_12_57_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_1_12_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_1_12_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_3_02_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_3_02_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_9_43_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_2022_9_43_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_10_37_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_10_37_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_01_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_01_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_25_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_25_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_34_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_34_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_57_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_57_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_57_PM__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_20_2022_12_57_PM__Changes_1.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_12_02_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_12_02_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_12_54_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_12_54_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_1_10_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_23_2022_1_10_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_11_57_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_11_57_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_12_05_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_12_05_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_12_34_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_12_34_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_8_39_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_24_2022_8_39_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Level1Manager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Level1Manager.java" afterDir="false" />
+    <list default="true" id="ad717c3b-c1b7-40ae-b0e7-6b4ea63b2c7f" name="Changes" comment="Added multiple image options">
+      <change beforePath="$PROJECT_DIR$/src/Enemy.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Enemy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/UserScreen.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/UserScreen.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -236,7 +203,21 @@
       <option name="project" value="LOCAL" />
       <updated>1653452279649</updated>
     </task>
-    <option name="localTasksCounter" value="19" />
+    <task id="LOCAL-00019" summary="Added multiple image options">
+      <created>1653510211450</created>
+      <option name="number" value="00019" />
+      <option name="presentableId" value="LOCAL-00019" />
+      <option name="project" value="LOCAL" />
+      <updated>1653510211450</updated>
+    </task>
+    <task id="LOCAL-00020" summary="Added multiple image options">
+      <created>1653510244848</created>
+      <option name="number" value="00020" />
+      <option name="presentableId" value="LOCAL-00020" />
+      <option name="project" value="LOCAL" />
+      <updated>1653510244848</updated>
+    </task>
+    <option name="localTasksCounter" value="21" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -268,7 +249,8 @@
     <MESSAGE value="level 3 start" />
     <MESSAGE value="triple lasers" />
     <MESSAGE value="fix" />
-    <option name="LAST_COMMIT_MESSAGE" value="fix" />
+    <MESSAGE value="Added multiple image options" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added multiple image options" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
